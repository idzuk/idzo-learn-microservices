version: "3.8"

services:
  resource-db:
    image: postgres:16-alpine
    container_name: resource-db
    environment:
      POSTGRES_DB: ${RESOURCE_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - ./init-scripts/resource-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  song-db:
    image: postgres:16-alpine
    container_name: song-db
    environment:
      POSTGRES_DB: ${SONG_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - ./init-scripts/song-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  eureka-server:
    build:
      context: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SERVER_PORT=8761

  resource-service:
    build:
      context: ./resource-service
    container_name: resource-service
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - SPRING_DATASOURCE_URL=${RESOURCE_DB_URL}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SONG_SERVICE_NAME=${SONG_SERVICE_NAME}
      - EUREKA_SERVER=${EUREKA_SERVER}
    depends_on:
      - resource-db
      - eureka-server

  song-service:
    build:
      context: ./song-service
###DYNAMIC
#    ports:
#      - "8082"
###STATIC
    deploy:
      replicas: 2
    ports:
      - "8060-8065:8084"
    environment:
      - SERVER_PORT=8084
      - SPRING_DATASOURCE_URL=${SONG_DB_URL}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - EUREKA_SERVER=${EUREKA_SERVER}
    depends_on:
      - song-db
      - eureka-server
